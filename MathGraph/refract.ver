#version 330 core

layout (location = 0) in vec3 VertexPosition;
layout (location = 1) in vec3 VertexNormal;
layout (location = 2) in vec2 VertexTexCoord;

out vec3 ReflectDir;
out vec3 RefractDir;
out vec3 pos;

struct MaterialInfo {
    float Eta;              
    float ReflectionFactor;
};
uniform MaterialInfo Material;

uniform bool DrawSkyBox;

uniform vec3 CamPos;
uniform mat4 Model;
uniform mat3 NormalMatrix;
uniform mat4 Projection;
uniform mat4 View;

void main()
{
    if( DrawSkyBox ) {
        ReflectDir = VertexPosition;
    } else {
        vec3 worldPos = vec3( Model * vec4(VertexPosition,1.0) );
        vec3 worldNorm = vec3(Model * vec4(VertexNormal, 0.0));
        vec3 worldView = normalize( CamPos - worldPos );

        ReflectDir = reflect(-worldView, worldNorm );
        RefractDir = refract(-worldView, worldNorm, Material.Eta );
    }
    pos = CamPos - vec3( Model * vec4(VertexPosition,1.0)) ;
    gl_Position = Projection * View * Model * vec4(VertexPosition,1.0);
}
